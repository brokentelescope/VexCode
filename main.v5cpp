{"mode":"Text","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n// Robot configuration code.\n\nmotor armMotor = motor(PORT10, ratio18_1, false);\nmotor LeftDriveSmart = motor(PORT4, ratio6_1, false);\nmotor RightDriveSmart = motor(PORT5, ratio6_1, true);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 319.19, 317.5, 117.475, mm, 1);\n\ncontroller Controller1 = controller(primary);\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n#pragma endregion VEXcode Generated Robot Configuration\n\n/*----------------------------------------------------------------------------*/\n/*                                                                            */\n/*    Module:       main.cpp                                                  */\n/*    Author:       {Merivale High School}                                    */\n/*    Created:      {11/23/2022}                                              */\n/*    Description:  V5 project                                                */\n/*                                                                            */\n/*----------------------------------------------------------------------------*/\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\ncompetition Competition;\n\nvoid runOnAutonomous(void) {\n  \n}\n\nvoid spin(void) {\n  armMotor.spin(forward);\n}\n\nvoid stop_motor(void) {\n  armMotor.stop();\n}\n\nvoid runOnDriverControl(void) {\n  Brain.Screen.print(\"Running teleop\");\n\n  armMotor.setVelocity(50, percent);\n\n  \n  while (true) {\n    // arm \n    Controller1.ButtonL1.pressed(spin);\n    Controller1.ButtonL1.released(stop_motor);\n\n    // drivetrain\n    if (Controller1.Axis3.position() > 0.0) {\n      LeftDriveSmart.setVelocity((Controller1.Axis3.position() + Controller1.Axis4.position())/1.5, percent);\n      RightDriveSmart.setVelocity((Controller1.Axis3.position() - Controller1.Axis4.position())/1.5, percent);\n    }\n\n    else {\n      RightDriveSmart.setVelocity((Controller1.Axis3.position() + Controller1.Axis4.position())/1.5, percent);\n      LeftDriveSmart.setVelocity((Controller1.Axis3.position() - Controller1.Axis4.position())/1.5, percent);\n    }\n    \n    LeftDriveSmart.spin(forward);\n    RightDriveSmart.spin(forward); \n  }\n\n}\n\nint main() {\n  \n  runOnDriverControl();\n  // Competition.autonomous(runOnAutonomous);\n  Competition.drivercontrol(runOnDriverControl);\n\n  while (true) {\n    wait(0.05, seconds);\n  }\n\n}","textLanguage":"cpp","rconfig":[{"port":[10],"name":"armMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.4","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}